--In the SQL, I am querying a database with multiple tables in it to determine various data elements.

--#1 Show customers (their full names, customer ID, and country) who are not in the US
SELECT customers.FirstName, customers.LastName, customers.Customerid, customers.Country FROM chinook.customers WHERE Country<>'USA';

--#2 Show only the customers from Brazil
SELECT customers.FirstName, customers.LastName, customers.Customerid FROM chinook.customers WHERE Country='Brazil';

--#3 Find the invoices of customers who are from Brazil (customers full name, invoice ID, date of invoice, and billing country)
SELECT customers.FirstName, customers.LastName, invoices.Invoiceid, invoices.invoiceDate, invoices.BillingCountry FROM chinook.invoices
    LEFT JOIN chinook.customers
    ON invoices.CustomerID = customers.CustomerId
    WHERE invoices.BillingCountry = 'Brazil';

--#4 Show the employees who are sales agents.
SELECT FirstName, LastName, Title, Email FROM chinook.employees WHERE Title LIKE '%Sales%';

--#5 Find a unique/distinct list of billing countries from the invoice table.
SELECT DISTINCT BillingCountry FROM chinook.invoices WHERE Total > 10.00 GROUP BY BillingCountry;

--#6 Provide a query that shows the invoices associated with each sales agent (include sales agents full name;
SELECT employees.FirstName, employees.LastName, invoices.Invoiceid FROM chinook.employees
    JOIN chinook.customers 
    ON customers.SupportRepID = employees.EmployeeID
    JOIN chinook.Invoices
    ON invoices.CustomerID = customers.CustomerID;

--#7 Show the invoice total, customer name, country, and sales agent name for all invoices and customers
SELECT employees.FirstName, employees.LastName, customers.FirstName, customers.LastName, customers.Country, invoices.Total
    FROM chinook.employees
    JOIN chinook.customers 
    ON customers.SupportRepID = employees.EmployeeID
   JOIN chinook.Invoices
   ON invoices.CustomerID = customers.CustomerID;

--#8 How many invoices were there in 2009?
SELECT COUNT (*) FROM chinook.invoices WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--#9 What are the total sales for 2009?
SELECT SUM (Total) FROM chinook.invoices WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--#10 Write a query that includes the purchased track name with each invoice line item.
SELECT tracks.Name, invoice_items.InvoiceLineID FROM chinook.invoice_items    
    JOIN chinook.tracks 
    ON invoice_items.trackID = tracks.TrackID;

--#11 Write a query that includes the purchosed track name AND artist name with each invoice line item.
SELECT tracks.Name, tracks.Composer, invoice_items.InvoiceLineID FROM chinook.invoice_items    
    JOIN chinook.tracks 
    ON invoice_items.trackID = tracks.TrackID;

--#12 Provide a query that shows all the tracks, and include the album name, media type, and genre.
SELECT tracks.Name AS 'Track Name', albums.Title AS "Album Title', media_types.Name AS 'Media Type', genres.Name AS 'Genre' FROM chinook.tracks
    JOIN chinook.Albums ON albums.albumid = tracks.albumid
    JOIN chinook.media_types ON media_types.mediatypeid = tracks.mediatypeid
    JOIN chinook.genres ON genres.genreid = tracks.genreid;

--#13 Show the total sales made by each sales agent.
SELECT employees.FirstName, employees.LastName,
    ROUND (SUM (Invoices.Total), 2) AS 'Total Sales'
    FROM chinook.employees
    JOIN chinook.customers ON customers.SupportRepId = employees.EmployeeId 
    JOIN chinook.invoices ON invoices.customerid = customers.CustomerId
    WHERE employees.Title LIKE '%Sales%
    GROUP BY employees.FirstName;

--#14 Which sales agent made the most in sales in 2009?
SELECT employees.FirstName, employees.LastName,
    ROUND (SUM (Invoices.Total), 2) AS 'Total Sales'
    FROM chinook.employees
    JOIN chinook.customers ON customers.SupportRepId = employees.EmployeeId 
    JOIN chinook.invoices ON invoices.customerid = customers.CustomerId
    WHERE employees.Title LIKE '%Sales%' AND invoices.InvoiceDate LIKE '2009%'
    GROUP BY employees.FirstName
    ORDER BY (round(sum(Invoices.Total), 2)) DESC LIMIT 1;
